<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kindol.o2o.dao.ShopDao">
    <!-- 使用jdbc的getGeneratedKeys获取数据库自增主键值
        一旦添加数据成功，将会通过JDBC获取主键的值并插入到传入的实体类当中
        使用此属性是因为每个店铺都需要有自己的唯一ID，其他的表格可能会跟此ID相关联
        当然也可以自己实现先插入再select出ID，但是当有两个插入请求同时发送，此时ID可能会变为乱序，
        使用了getGeneratedKeys属性后面就需要跟上keyColumn和keyProperty，
        返回ID结果-->
    <insert id="insertShop" useGeneratedKeys="true" keyColumn="shop_id" keyProperty="shopId">
       INSERT INTO
		tb_shop(owner_id,area_id,shop_category_id,shop_name,
		shop_desc,shop_addr,phone,shop_img,
		priority,create_time,last_edit_time,
		enable_status,advice)
		VALUES
		(#{owner.userId},#{area.areaId},#{shopCategory.shopCategoryId},
		#{shopName},#{shopDesc},#{shopAddr},#{phone},#{shopImg},
		#{priority},#{createTime},#{lastEditTime},
		#{enableStatus},#{advice})
    </insert>

	<!--mybatis支持动态sql的生成，对同一行的字段部分更新，部分不更新-->
	<!--parameterType指示参数类型-->
	<update id="updateShop" parameterType="com.kindol.o2o.entity.Shop">
		update tb_shop
		<set>
			<!--test=xxx对应shop实体类的成员变量，当中的内容左边是数据库的字段、右边是实体类的属性，
				如果不是最后一个if，那么都需要有“，”进行拼接，
				area，shopCategory字段需要注意不能直接赋值，
				最后需要where语句-->
			<if test="shopName != null">shop_Name=#{shopName},</if>
			<if test="shopDesc != null">shop_desc=#{shopDesc},</if>
			<if test="shopAddr != null">shop_addr=#{shopAddr},</if>
			<if test="shopImg != null">shop_img=#{shopImg},</if>
			<if test="priority != null">priority=#{priority},</if>
			<if test="lastEditTime != null">last_edit_time=#{lastEditTime},</if>
			<if test="enableStatus != null">enable_status=#{enableStatus},</if>
			<if test="advice != null">advice=#{advice},</if>
			<if test="area != null">area_id = #{area.areaId},</if>
			<if test="shopCategory != null">shop_category_id=#{shopCategory.shopCategoryId}</if>
		</set>
		where shop_id=#{shopId}
	</update>

	<!--resultMap是用于索引后取得信息映射用，当本类含有其他类的属性作为返回结果则需要resultMap-->
	<resultMap id="shopMap" type="com.kindol.o2o.entity.Shop">
		<!--column对应表格的列名、property对应类中的名字，标签为id的表示为主键，其他是result-->
		<id column="shop_id" property="shopId"/>
		<result column="shop_name" property="shopName"/>
		<result column="shop_desc" property="shopDesc"/>
		<result column="shop_addr" property="shopAddr"/>
		<result column="phone" property="phone"/>
		<result column="shop_img" property="shopImg"/>
		<result column="priority" property="priority"/>
		<result column="create_time" property="createTime"/>
		<result column="last_edit_time" property="lastEditTime"/>
		<result column="enable_status" property="enableStatus"/>
		<result column="advice" property="advice"/>
		<!--association定义复合类型-->
		<association property="area" column="area_id" javaType="com.kindol.o2o.entity.Area">
			<id column="area_id" property="areaId"/>
			<result column="area_name" property="areaName"/>
		</association>
		<association property="shopCategory" column="shop_category_id" javaType="com.kindol.o2o.entity.ShopCategory">
			<id column="shop_category_id" property="shopCategoryId"/>
			<result column="shop_category_name" property="shopCategoryName"/>
		</association>
		<association property="owner" column="user_id" javaType="com.kindol.o2o.entity.PersonInfo">
			<id column="user_id" property="userId"/>
			<result column="name" property="name"/>
		</association>
	</resultMap>
	<!--返回单条数据-->
	<select id="queryByShopId" resultMap="shopMap" parameterType="Long">
		SELECT
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		sc.shop_category_id,
		sc.shop_category_name
		from
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		where
		s.area_id=a.area_id
		and
		s.shop_category_id=sc.shop_category_id
		and
		s.shop_id=#{shopId}
	</select>
	<!--返回多条数据
		where语句作为标签的情况是需要用到外部实体类的时候，
		否则可以直接使用sql的where，
		而且，使用标签可以更加简单地编程与排列组合
		当中shopName是模糊查询的，所以前后加%
		最后的limit是使用分页-->
	<select id="queryShopList" resultMap="shopMap">
	SELECT
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		sc.shop_category_id,
		sc.shop_category_name
		from
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		<where>
			<if test="shopCondition.shopCategory != null and
			shopCondition.shopCategory.shopCategoryId != null">
				and s.shop_category_id = #{shopCondition.shopCategory.shopCategoryId}
			</if>
			<if test="shopCondition.shopCategory != null and
			shopCondition.shopCategory.parent != null and
			shopCondition.shopCategory.parent.shopCategoryId != null">
				and s.shop_category_id in (select shop_category_id from tb_shop_category
				where parent_id = #{shopCondition.shopCategory.parent.shopCategoryId})
			</if>
			<if test="shopCondition.area != null and
			shopCondition.area.areaId != null">
				and s.shop_area_id = #{shopCondition.area.areaId}
			</if>
			<if test="shopCondition.shopName != null">
				and s.shop_name like '%${shopCondition.shopName}%'
			</if>
			<if test="shopCondition.enableStatus != null">
				and s.enable_status = #{shopCondition.enableStatus}
			</if>
			<if test="shopCondition.owner != null and
			shopCondition.owner.userId != null">
				and s.owner_id = #{shopCondition.owner.userId}
			</if>
			and
			s.area_id = a.area_id
			and
			s.shop_category_id=sc.shop_category_id
		</where>
		order by
		priority desc
		limit #{rowIndex},#{pageSize}
	</select>
	<select id="queryShopCount" resultType="int">
		select
		count(1)
		from
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		<where>
			<if test="shopCondition.shopCategory != null and
			shopCondition.shopCategory.shopCategoryId != null">
				and s.shop_category_id = #{shopCondition.shopCategory.shopCategoryId}
			</if>
			<if test="shopCondition.shopCategory != null and
			shopCondition.shopCategory.parent != null and
			shopCondition.shopCategory.parent.shopCategoryId != null">
				and s.shop_category_id in (select shop_category_id from tb_shop_category
				where parent_id = #{shopCondition.shopCategory.parent.shopCategoryId})
			</if>
			<if test="shopCondition.area != null and
			shopCondition.area.areaId != null">
				and s.shop_area_id = #{shopCondition.area.areaId}
			</if>
			<if test="shopCondition.shopName != null">
				and s.shop_name like '%${shopCondition.shopName}%'
			</if>
			<if test="shopCondition.enableStatus != null">
				and s.enable_status = #{shopCondition.enableStatus}
			</if>
			<if test="shopCondition.owner != null and
			shopCondition.owner.userId != null">
				and s.owner_id = #{shopCondition.owner.userId}
			</if>
			and
			s.area_id = a.area_id
			and
			s.shop_category_id=sc.shop_category_id
		</where>
	</select>
</mapper>